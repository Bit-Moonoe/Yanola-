package com.yanola.yanolatetris.controller;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.yanola.yanolatetris.entity.Group;
import com.yanola.yanolatetris.repository.GroupRepository;
import com.yanola.yanolatetris.service.GroupService;

import com.yanola.yanolatetris.jwt.JwtTokenGenerator;

@RestController
@CrossOrigin(origins = "*")
@RequestMapping("/group")
public class MypageController {

    @Autowired
    private GroupService groupService;


    @Autowired
    private JwtTokenGenerator jwtTokenGenerator;

    @GetMapping("/{groupId}")
    public Group.Response GroupMyPage(@PathVariable String groupId) {
        System.out.println("그룹 마이페이지 호출");

        Group groupInfo = groupService.findGroupById(groupId);
        return Group.Response.toResponse(groupInfo);
    }

    @PostMapping
    public ResponseEntity<Group.Response> createGroup(@RequestBody @Valid Group.Request request) {
        Group group = Group.Request.toEntity(request);
        System.out.println("접속 확인");
        
        String token = jwtTokenGenerator.generateToken(group);
        System.out.println("야놀라 토큰 확인: " + token);
        
        Group savedGroup = groupService.saveGroup(group);
        Group.Response response = Group.Response.toResponse(savedGroup);
        
        response.setToken(token);
        
        return ResponseEntity.status(HttpStatus.CREATED).body(response);
    }


}
